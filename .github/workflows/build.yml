# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Build
        run: |
          mkdir dist
          go build -trimpath -ldflags="-s -w" -v -o dist/

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          path: dist/
          retention-days: 1

      - name: Test
        run: go test -v ./...
      - name: Debug
        run: |
          find $PWD

      - name: Set up QEMU
        if: github.event_name == 'push'
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        if: github.event_name == 'push'
        uses: docker/setup-buildx-action@v3
      - name: Log in to ${{ secrets.REGISTRY || vars.REGISTRY || 'ghcr.io' }}
        if: github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.REGISTRY || vars.REGISTRY || 'ghcr.io' }}
          username: ${{ secrets.DOCKER_USER || github.actor }}
          password: ${{ secrets.DOCKER_PASSWORD || secrets.GITHUB_TOKEN }}

      - name: Generate metadata (tags, labels) for Docker
        id: meta
        if: github.event_name == 'push'
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.REGISTRY || vars.REGISTRY || 'ghcr.io' }}/${{ secrets.NAMESPACE || vars.NAMESPACE || github.actor }}/gitea-actions-cache-serer
          flavor: |
            latest=true
          tags: |
            type=ref,event=branch
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        if: github.event_name == 'push'
        with:
          context: .
          file: Dockerfile
          push: true
          platforms: 'linux/amd64'
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

